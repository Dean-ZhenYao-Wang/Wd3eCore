<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Wd3eCore</name>
    </assembly>
    <members>
        <member name="M:Wd3eCore.Environment.Shell.Builders.ServiceProviderExtensions.CreateChildContainer(System.IServiceProvider,Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            创建一个子容器。
            </summary>
            <param name="serviceProvider">服务提供商,为其创建一个子容器.</param>
            <param name="serviceCollection">克隆服务</param>
        </member>
        <member name="T:Wd3eCore.Environment.Shell.Builders.FeatureAwareServiceCollection">
            <summary>
            一个服务集合，用于跟踪每个新增服务的 <see cref="T:Wd3eCore.Environment.Extensions.Features.IFeatureInfo"/> 。
            </summary>
        </member>
        <member name="P:Wd3eCore.Environment.Shell.Builders.FeatureAwareServiceCollection.FeatureCollections">
            <summary>
            按其特征信息分组的服务集合。
            </summary>
        </member>
        <member name="M:Wd3eCore.Environment.Shell.Builders.FeatureAwareServiceCollection.SetCurrentFeature(Wd3eCore.Environment.Extensions.Features.IFeatureInfo)">
            <summary>
            设置添加到此集合中时,将分配给当前服务的特征。
            </summary>
            <param name="feature">分配给当前服务的特征</param>
        </member>
        <member name="M:Wd3eCore.Environment.Shell.Builders.ShellContextFactory.MinimumShellDescriptor">
            <summary>
            最小的shell描述符用于引导第一个容器，它将被用来调用所有模块IStartup实现。
            它由模块名称组成，引用了所需场景所需的核心组件。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Wd3eCore.Environment.Shell.Builders.StartupBaseMock.Order">
            <inheritdoc />
        </member>
        <member name="P:Wd3eCore.Environment.Shell.Builders.StartupBaseMock.ConfigureOrder">
            <inheritdoc />
        </member>
        <member name="T:Wd3eCore.Environment.Shell.Descriptor.Settings.AllFeaturesShellDescriptorManager">
            <summary>
            通过返回一个包含所有可用扩展的单一租户来实现<see cref="T:Wd3eCore.Environment.Shell.Descriptor.IShellDescriptorManager"/> 。
            </summary>
        </member>
        <member name="T:Wd3eCore.Environment.Shell.Descriptor.Settings.ConfiguredFeaturesShellDescriptorManager">
            <summary>
            通过返回配置中的功能来实现 <see cref="T:Wd3eCore.Environment.Shell.Descriptor.IShellDescriptorManager"/>。
            </summary>
        </member>
        <member name="T:Wd3eCore.Environment.Shell.Descriptor.Settings.SetFeaturesShellDescriptorManager">
            <summary>
            通过返回一个具有指定功能集的单一租户来实现 <see cref="T:Wd3eCore.Environment.Shell.Descriptor.IShellDescriptorManager"/>。
            这个类可以作为一个单例类注册，因为它的状态永远不会改变。
            </summary>
        </member>
        <member name="M:Wd3eCore.Environment.Shell.ShellDescriptorFeaturesManager.GetFeaturesToEnable(Wd3eCore.Environment.Extensions.Features.IFeatureInfo,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            启用一个功能。
            </summary>
            <param name="featureInfo">要启用的功能信息。</param>
            <param name="enabledFeatureIds">目前启用的功能id列表。</param>
            <param name="force">布尔参数，表示该功能是否应该启用它的依赖关系。</param>
            <returns>枚举了要禁用的功能，如果'force'=true且依赖关系被禁用，则为空。</returns>
        </member>
        <member name="M:Wd3eCore.Environment.Shell.ShellDescriptorFeaturesManager.GetFeaturesToDisable(Wd3eCore.Environment.Extensions.Features.IFeatureInfo,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            禁用一个功能。
            </summary>
            <param name="featureInfo">要禁用的功能信息。</param>
            <param name="enabledFeatureIds">目前启用的功能id列表。</param>
            <param name="force">布尔参数，表示该功能是否应该禁用其依赖的功能。</param>
            <returns>枚举了要启用的功能，如果'force'=true，并且启用了从属关系，则为空。</returns>
        </member>
        <member name="T:Wd3eCore.Environment.Shell.ShellHost">
            <summary>
            当调用<see cref="M:Wd3eCore.Environment.Shell.ShellHost.InitializeAsync"/>时，所有的<see cref="T:Wd3eCore.Environment.Shell.Builders.ShellContext"/>对象都会被加载。
            当租户被移除时，它们可以被移除，但对于匹配传入的请求，即使没有初始化它们也是必要的。
            每个<see cref="T:Wd3eCore.Environment.Shell.Builders.ShellContext"/>都是在第一次请求时被激活（它的服务提供者被建立）。
            </summary>
        </member>
        <member name="M:Wd3eCore.Environment.Shell.ShellHost.AddAndRegisterShell(Wd3eCore.Environment.Shell.Builders.ShellContext)">
            <summary>
            添加shell并在RunningShellTable中注册其设置
            </summary>
        </member>
        <member name="M:Wd3eCore.Environment.Shell.ShellHost.CanRegisterShell(Wd3eCore.Environment.Shell.Builders.ShellContext)">
            <summary>
            是否可以激活shell并将其添加到正在运行的shell中
            </summary>
        </member>
        <member name="M:Wd3eCore.Environment.Shell.ShellHost.RegisterShellSettings(Wd3eCore.Environment.Shell.ShellSettings)">
            <summary>
            注册RunningShellTable中的shell设置。
            </summary>
        </member>
        <member name="M:Wd3eCore.Environment.Shell.ShellHost.CreateShellContextAsync(Wd3eCore.Environment.Shell.ShellSettings)">
            <summary>
            根据shell设置创建一个shell上下文
            </summary>
        </member>
        <member name="M:Wd3eCore.Environment.Shell.ShellHost.CreateSetupContextAsync(Wd3eCore.Environment.Shell.ShellSettings)">
            <summary>
            为默认租户的设置创建一个临时shell。
            </summary>
        </member>
        <member name="M:Wd3eCore.Environment.Shell.ShellHost.Wd3eCore#Environment#Shell#IShellDescriptorManagerEventHandler#Changed(Wd3eCore.Environment.Shell.Descriptor.Models.ShellDescriptor,System.String)">
            <summary>
            一个功能被启用/禁用，需要重新启动租户
            </summary>
        </member>
        <member name="M:Wd3eCore.Environment.Shell.ShellHost.ReloadShellContextAsync(Wd3eCore.Environment.Shell.ShellSettings)">
            <summary>
            将特定的租户标记为释放，这样就会为后续请求创建一个新的shell，而现有的请求会被清除。
            </summary>
            <param name="settings"></param>
        </member>
        <member name="M:Wd3eCore.Environment.Shell.ShellHost.TryGetSettings(System.String,Wd3eCore.Environment.Shell.ShellSettings@)">
            <summary>
            尝试检索与指定租户关联的shell设置。
            </summary>
            <returns><c>true</c>  找到设置, <c>false</c> </returns>
        </member>
        <member name="M:Wd3eCore.Environment.Shell.ShellHost.GetAllSettings">
            <summary>
            检索所有的shell设置。
            </summary>
            <returns>所有的shell设置。</returns>
        </member>
        <member name="M:Wd3eCore.Environment.Shell.ShellHost.CanCreateShell(Wd3eCore.Environment.Shell.ShellSettings)">
            <summary>
            是否可以将shell添加到可用的shell列表中。
            </summary>
        </member>
        <member name="M:Wd3eCore.Environment.Shell.ShellHost.CanRegisterShell(Wd3eCore.Environment.Shell.ShellSettings)">
            <summary>
            是否可以激活shell并将其添加到正在运行的shell中。
            </summary>
        </member>
        <member name="T:Wd3eCore.Environment.Shell.ShellOptionsSetup">
            <summary>
            为 <see cref="T:Wd3eCore.Environment.Shell.ShellOptions"/>设置默认选项
            </summary>
        </member>
        <member name="T:Wd3eCore.Environment.Shell.State.ContextState`1">
            <summary>
            保持当前HttpContext或线程的一些状态。
            </summary>
            <typeparam name="T">要存储的数据类型</typeparam>
        </member>
        <member name="T:Wd3eCore.Environment.Cache.Signal">
            <summary>
            该组件是单例的，它包含租户的所有现有信号令牌。
            </summary>
        </member>
        <member name="T:Wd3eCore.Localization.DefaultCalendarManager">
            <summary>
            Represents a default implementation to manage the calendars.
            </summary>
        </member>
        <member name="M:Wd3eCore.Localization.DefaultCalendarManager.#ctor(System.Collections.Generic.IEnumerable{Wd3eCore.Localization.ICalendarSelector})">
            <summary>
            创建一个新的 <see cref="T:Wd3eCore.Localization.DefaultCalendarManager"/>实例
            </summary>
            <param name="calendarSelectors"><see cref="T:Wd3eCore.Localization.ICalendarSelector"/>的列表</param>
        </member>
        <member name="M:Wd3eCore.Localization.DefaultCalendarManager.GetCurrentCalendar">
            <inheritdocs />
        </member>
        <member name="T:Wd3eCore.Localization.DefaultCalendarSelector">
            <summary>
            表示<see cref="T:Wd3eCore.Localization.ICalendarSelector"/>的默认实现方式
            </summary>
        </member>
        <member name="M:Wd3eCore.Localization.DefaultCalendarSelector.GetCalendarAsync">
            <inheritdocs />
        </member>
        <member name="T:Wd3eCore.Localization.DefaultLocalizationService">
            <summary>
            表示<see cref="T:Wd3eCore.Localization.ILocalizationService"/>的默认实现
            </summary>
        </member>
        <member name="M:Wd3eCore.Localization.DefaultLocalizationService.GetDefaultCultureAsync">
            <inheritdocs />
        </member>
        <member name="M:Wd3eCore.Localization.DefaultLocalizationService.GetSupportedCulturesAsync">
            <inheritdocs />
        </member>
        <member name="T:Wd3eCore.Localization.NullHtmlLocalizerFactory">
            表示空<see cref="T:Microsoft.AspNetCore.Mvc.Localization.IHtmlLocalizerFactory"/>，默认情况下在禁用本地化模块时使用该空zzz。
             <remarks>
             LocalizedHtmlString的参数将是HTML编码的，而不是主字符串。因此，结果应该只包含包含格式化占位符{0…}。
             </remarks>
        </member>
        <member name="M:Wd3eCore.Localization.NullHtmlLocalizerFactory.Create(System.String,System.String)">
            <inheritdocs />
        </member>
        <member name="M:Wd3eCore.Localization.NullHtmlLocalizerFactory.Create(System.Type)">
            <inheritdocs />
        </member>
        <member name="T:Wd3eCore.Localization.NullStringLocalizerFactory">
            表示在禁用本地化模块时默认使用的空<see cref="T:Microsoft.Extensions.Localization.IStringLocalizerFactory"/> 
            <remarks>
            LocalizedString没有经过编码，所以它可以包含格式化的字符串，包括参数值。
            </remarks>
        </member>
        <member name="M:Wd3eCore.Localization.NullStringLocalizerFactory.Create(System.Type)">
            <inheritdocs />
        </member>
        <member name="M:Wd3eCore.Localization.NullStringLocalizerFactory.Create(System.String,System.String)">
            <inheritdocs />
        </member>
        <member name="T:Wd3eCore.Modules.ModularTenantContainerMiddleware">
            <summary>
            该中间件将默认服务提供者替换为当前租户的服务提供者
            </summary>
        </member>
        <member name="T:Wd3eCore.Modules.ModularTenantRouterMiddleware">
            <summary>
            通过将请求转发给特定于租户的“IRouter”实例来处理请求。
            它还在第一个请求时为被请求的租户初始化中间件。
            </summary>
        </member>
        <member name="M:Wd3eCore.Modules.ModularTenantRouterMiddleware.BuildTenantPipeline">
            <summary>
            为当前租户构建中间件管道
            </summary>
            <returns></returns>
        </member>
        <member name="T:Wd3eCore.Modules.PoweredByMiddleware">
            <summary>
            添加带有Wd3eCore值的X-Powered-By头。
            </summary>
        </member>
        <member name="P:Wd3eCore.Modules.Clock.UtcNow">
            <summary>
            返回 "现在 "的Datetime Kind.Utc。
            </summary>
            <inheritdoc />
        </member>
        <member name="M:Wd3eCore.Modules.Clock.GetTimeZones">
            <summary>
            以ITimeZone[]的形式返回一个有效的时区列表，其中key为时区id(string)，值可用于显示。
            该列表经过过滤，只包含对当前和近期的真实地点合理有效的选择。
            该列表也会先按UTC偏移量排序，然后按时区名称排序。
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UseWd3eCore(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder})">
            <summary>
            启用对当前路径的多租户请求支持。
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.PoweredByWd3eCoreExtensions.UsePoweredByWd3eCore(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Boolean)">
            <summary>
            配置是否使用X-Powered-By头文件。
            默认值是Wd3eCore。
            </summary>
            <param name="app">模块化应用程序构建器</param>
            <param name="enabled">是否应在响应中包含标头</param>
            <returns>模块化应用程序构建器</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.PoweredByWd3eCoreExtensions.UsePoweredBy(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Boolean,System.String)">
            <summary>
            配置是否使用X-POWERED-BY头及其值。
            默认值是Wd3eCore。
            </summary>
            <param name="app">模块化应用程序构建器</param>
            <param name="enabled">是否应在响应中包含标头</param>
            <param name="headerValue">头的值</param>
            <returns>模块化应用程序构建器</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.Wd3eCoreBuilderExtensions.AddGlobalFeatures(Microsoft.Extensions.DependencyInjection.Wd3eCoreBuilder,System.String[])">
            <summary>
            在主机级注册一组始终为任何租户启用的功能。
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.Wd3eCoreBuilderExtensions.AddTenantFeatures(Microsoft.Extensions.DependencyInjection.Wd3eCoreBuilder,System.String[])">
            <summary>
            在租户级别注册一组始终启用的功能。
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.Wd3eCoreBuilderExtensions.AddSetupFeatures(Microsoft.Extensions.DependencyInjection.Wd3eCoreBuilder,System.String[])">
            <summary>
            使用一组用于设置和配置实际租户的功能注册默认租户。
            例如，可以使用它来添加自定义设置模块。
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.Wd3eCoreBuilderExtensions.WithTenants(Microsoft.Extensions.DependencyInjection.Wd3eCoreBuilder)">
            <summary>
            注册配置中定义的租户。
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.Wd3eCoreBuilderExtensions.WithFeatures(Microsoft.Extensions.DependencyInjection.Wd3eCoreBuilder,System.String[])">
            <summary>
            使用指定的功能集注册单个租户。
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.Wd3eCoreBuilderExtensions.AddBackgroundService(Microsoft.Extensions.DependencyInjection.Wd3eCoreBuilder)">
            <summary>
            注册并配置后台托管服务，以管理租户后台任务。
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddWd3eCore(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            将Wd3eCore服务添加到主机服务集合中。
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddWd3eCore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.DependencyInjection.Wd3eCoreBuilder})">
            <summary>
            Adds Wd3eCore services to the host service collection and let the app change
            the default behavior and set of features through a configure action.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddStaticFiles(Microsoft.Extensions.DependencyInjection.Wd3eCoreBuilder)">
            <summary>
            Adds tenant level configuration to serve static files from modules
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddRouting(Microsoft.Extensions.DependencyInjection.Wd3eCoreBuilder)">
            <summary>
            Adds isolated tenant level routing services.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddAntiForgery(Microsoft.Extensions.DependencyInjection.Wd3eCoreBuilder)">
            <summary>
            Adds host and tenant level antiforgery services.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddSameSiteCookieBackwardsCompatibility(Microsoft.Extensions.DependencyInjection.Wd3eCoreBuilder)">
            <summary>
            Adds backwards compatibility to the handling of SameSite cookies.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddAuthentication(Microsoft.Extensions.DependencyInjection.Wd3eCoreBuilder)">
            <summary>
            Adds host and tenant level authentication services and configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddDataProtection(Microsoft.Extensions.DependencyInjection.Wd3eCoreBuilder)">
            <summary>
            Adds tenant level data protection services.
            </summary>
        </member>
    </members>
</doc>
