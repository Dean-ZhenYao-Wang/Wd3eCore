<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Wd3eCore.Infrastructure.Abstractions</name>
    </assembly>
    <members>
        <member name="M:Wd3eCore.Environment.Cache.CacheContext.WithExpiryOn(System.DateTimeOffset)">
            <summary>
            定义应该缓存值的绝对时间。
            如果不调用，将使用滑动值。
            </summary>
        </member>
        <member name="M:Wd3eCore.Environment.Cache.CacheContext.WithExpiryAfter(System.TimeSpan)">
            <summary>
            定义应该为其缓存的绝对时间(相对于现在)。
            如果不调用，将使用滑动值。
            </summary>
        </member>
        <member name="M:Wd3eCore.Environment.Cache.CacheContext.WithExpirySliding(System.TimeSpan)">
            <summary>
            定义值应该缓存的滑动过期时间。
            如果没有调用，将使用默认的滑动值(除非指定了绝对失效时间)。
            </summary>
        </member>
        <member name="M:Wd3eCore.Environment.Cache.CacheContext.AddContext(System.String[])">
            <summary>
            定义用于缓存形态的维度。例如，通过使用<code>"user"</code>，每个用户将得到不同的值。
            </summary>
        </member>
        <member name="M:Wd3eCore.Environment.Cache.CacheContext.RemoveContext(System.String)">
            <summary>
            删除特定上下文。
            </summary>
        </member>
        <member name="M:Wd3eCore.Environment.Cache.ICacheContextManager.GetDiscriminatorsAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            通过请求所有<see cref="T:Wd3eCore.Environment.Cache.ICacheContextProvider"/>实现为特定的缓存上下文提供鉴别器。
            </summary>
        </member>
        <member name="T:Wd3eCore.Environment.Cache.ICacheContextProvider">
            <summary>
            返回一组值，这些值描述上下文的鉴别器，并返回一个值，每当鉴别器的状态发生变化时，该值就会变化，例如时间戳的序列号。
            </summary>
        </member>
        <member name="M:Wd3eCore.Environment.Cache.ICacheScopeManager.AddDependencies(System.String[])">
            <summary>
            将给定的依赖项添加到当前最内层缓存上下文
            </summary>
            <param name="dependencies">要添加的依赖项</param>
        </member>
        <member name="M:Wd3eCore.Environment.Cache.ICacheScopeManager.AddContexts(System.String[])">
            <summary>
            将给定的上下文添加到当前最内层缓存上下文
            </summary>
            <param name="contexts">要添加的上下文</param>
        </member>
        <member name="T:Wd3eCore.Infrastructure.Cache.IScopedDistributedCache">
            <summary>
            提供分布式缓存服务，可以返回当前范围内的现有引用。
            </summary>
        </member>
        <member name="T:Wd3eCore.Email.IEmailAddressValidator">
            <summary>
            电子邮件地址验证服务契约。
            </summary>
        </member>
        <member name="M:Wd3eCore.Email.IEmailAddressValidator.Validate(System.String)">
            <summary>
            验证电子邮件地址。
            </summary>
            <param name="emailAddress">要验证的电子邮件地址。</param>
            <returns>如果邮件有效，<c>true</c>，否则<c>false</c>。</returns>
        </member>
        <member name="M:Wd3eCore.Entities.EntityExtensions.As``1(Wd3eCore.Entities.IEntity)">
            <summary>
            提取指定类型的属性。
            </summary>
            <typeparam name="T">要提取的属性的类型。</typeparam>
            <returns>如果没有找到属性，则为请求类型的新实例。</returns>
        </member>
        <member name="M:Wd3eCore.Entities.EntityExtensions.As``1(Wd3eCore.Entities.IEntity,System.String)">
            <summary>
            提取指定名称的属性。
            </summary>
            <typeparam name="T">要提取的属性的类型。</typeparam>
            <param name="entity"></param>
            <param name="name">要提取的属性的名称。</param>
            <returns>如果没有找到属性，则为请求类型的新实例。</returns>
        </member>
        <member name="M:Wd3eCore.Entities.EntityExtensions.Has``1(Wd3eCore.Entities.IEntity)">
            <summary>
            指示指定的属性类型是否附加到<see cref="T:Wd3eCore.Entities.IEntity"/>实例。
            </summary>
            <typeparam name="T">要检查的属性的类型。</typeparam>
            <returns>如果发现属性则为true，否则为false。</returns>
        </member>
        <member name="M:Wd3eCore.Entities.EntityExtensions.Has(Wd3eCore.Entities.IEntity,System.String)">
            <summary>
            指示指定的属性是否附加到<see cref="T:Wd3eCore.Entities.IEntity"/>实例。
            </summary>
            <param name="entity"></param>
            <param name="name">要检查的属性的名称。</param>
            <returns>如果发现属性则为true，否则为false。</returns>
        </member>
        <member name="M:Wd3eCore.Entities.EntityExtensions.Alter``1(Wd3eCore.Entities.IEntity,System.String,System.Action{``0})">
            <summary>
            修改或创建 aspect.
            </summary>
            <param name="entity"></param>
            <param name="name">aspect的名称。</param>
            <param name="action">要应用于aspect的Action</param>
            <returns>当前 <see cref="T:Wd3eCore.Entities.IEntity"/> 实例。</returns>
        </member>
        <member name="T:Wd3eCore.Scripting.IGlobalMethodProvider">
            <summary>
            <see cref="T:Wd3eCore.Scripting.IGlobalMethodProvider"/>的一个实现为<see cref="T:Wd3eCore.Scripting.IScriptingManager"/>实例提供了自定义方法。
            </summary>
        </member>
        <member name="M:Wd3eCore.Scripting.IGlobalMethodProvider.GetMethods">
            <summary>
            获取要提供给<see cref="T:Wd3eCore.Scripting.IScriptingManager"/>的方法列表。
            </summary>
            <returns><see cref="T:Wd3eCore.Scripting.GlobalMethod"/>实例的列表。</returns>
        </member>
        <member name="T:Wd3eCore.Scripting.IScriptingManager">
            <summary>
            <see cref="T:Wd3eCore.Scripting.IScriptingManager"/>的一个实现提供了评估自定义脚本的服务。
            </summary>
        </member>
        <member name="M:Wd3eCore.Scripting.IScriptingManager.GetScriptingEngine(System.String)">
            <summary>
            获取指定前缀的脚本引擎。
            </summary>
            <param name="prefix">代表要返回的引擎的字符串。</param>
            <returns>脚本引擎或<code>null</code>(如果找不到的话)。</returns>
        </member>
        <member name="M:Wd3eCore.Scripting.IScriptingManager.Evaluate(System.String,Microsoft.Extensions.FileProviders.IFileProvider,System.String,System.Collections.Generic.IEnumerable{Wd3eCore.Scripting.IGlobalMethodProvider})">
            <summary>
            通过寻找匹配的脚本引擎，执行一些前缀脚本。
            </summary>
            <param name="directive">要执行的指令。</param>
            <param name="fileProvider">一个可选的<see cref="T:Microsoft.Extensions.FileProviders.IFileProvider"/>实例。</param>
            <param name="basePath"></param>
            <param name="scopedMethodProviders">作用域为脚本评估的方法提供程序的列表。</param>
            <returns>The result of the script if any.</returns>
        </member>
        <member name="P:Wd3eCore.Scripting.IScriptingManager.GlobalMethodProviders">
            <summary>
            这个<see cref="T:Wd3eCore.Scripting.IScriptingManager"/>实例的可用方法提供程序列表。
            </summary>
        </member>
        <member name="T:Wd3eCore.Security.Permissions.IPermissionProvider">
            <summary>
            由模块实现，用于枚举可能被授予的权限类型。
            </summary>
        </member>
        <member name="T:Wd3eCore.Security.RoleClaim">
            <summary>
            表示授予角色内所有用户的claim
            </summary>
        </member>
        <member name="P:Wd3eCore.Security.RoleClaim.ClaimType">
            <summary>
            获取或设置此claim的claim类型。
            </summary>
        </member>
        <member name="P:Wd3eCore.Security.RoleClaim.ClaimValue">
            <summary>
            获取或设置此claim的claim值。
            </summary>
        </member>
        <member name="T:Wd3eCore.Settings.ISiteService">
            <summary>
            提供管理站点设置的服务。
            </summary>
        </member>
        <member name="M:Wd3eCore.Settings.ISiteService.LoadSiteSettingsAsync">
            <summary>
            返回udpate的站点设置。
            </summary>
        </member>
        <member name="M:Wd3eCore.Settings.ISiteService.GetSiteSettingsAsync">
            <summary>
            以只读形式返回当前租户的站点设置。
            </summary>
        </member>
        <member name="M:Wd3eCore.Settings.ISiteService.UpdateSiteSettingsAsync(Wd3eCore.Settings.ISite)">
            <summary>
            保存对站点设置的更改。
            </summary>
        </member>
        <member name="P:Wd3eCore.Settings.ISiteService.ChangeToken">
            <summary>
            获取在站点设置更改时设置的更改令牌。
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.FileProviderExtensions.GetRelativeFileInfo(Microsoft.Extensions.FileProviders.IFileProvider,System.String,System.String)">
            <summary>
            在给定的相对路径上定位文件
            </summary>
        </member>
        <member name="M:System.IO.PathExtensions.Combine(System.String,System.String)">
            <summary>
            合并两个路径部分
            </summary>
        </member>
        <member name="M:System.IO.PathExtensions.Combine(System.String,System.String[])">
            <summary>
            组合多个路径部件
            </summary>
        </member>
        <member name="M:System.IO.PathExtensions.ResolvePath(System.String)">
            <summary>
            解析路径中的相关段
            </summary>
        </member>
    </members>
</doc>
