<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Wd3eCore.Data.Abstractions</name>
    </assembly>
    <members>
        <member name="T:Wd3eCore.Data.Migration.DataMigration">
            <summary>
            代表数据库的迁移。
            </summary>
        </member>
        <member name="P:Wd3eCore.Data.Migration.DataMigration.SchemaBuilder">
            <inheritdocs />
        </member>
        <member name="T:Wd3eCore.Data.Migration.IDataMigration">
            <summary>
            表示数据库迁移的契约。
            </summary>
        </member>
        <member name="P:Wd3eCore.Data.Migration.IDataMigration.SchemaBuilder">
            <summary>
            获取或设置数据库架构生成器。
            </summary>
        </member>
        <member name="T:Wd3eCore.Data.Migration.IDataMigrationManager">
            <summary>
            表示管理数据库迁移的契约。
            </summary>
        </member>
        <member name="M:Wd3eCore.Data.Migration.IDataMigrationManager.GetFeaturesThatNeedUpdateAsync">
            <summary>
            返回至少有一个数据迁移类的特性，并调用相应的升级方法
            </summary>
        </member>
        <member name="M:Wd3eCore.Data.Migration.IDataMigrationManager.UpdateAllFeaturesAsync">
            <summary>
            运行所有需要更新的迁移。
            </summary>
        </member>
        <member name="M:Wd3eCore.Data.Migration.IDataMigrationManager.UpdateAsync(System.String)">
            <summary>
            将数据库更新为指定特性的最新版本
            </summary>
            <param name="feature">要卸载的特性。</param>
        </member>
        <member name="M:Wd3eCore.Data.Migration.IDataMigrationManager.UpdateAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            将数据库更新为指定特性的最新版本
            </summary>
            <param name="features">需要更新的特性。</param>
        </member>
        <member name="M:Wd3eCore.Data.Migration.IDataMigrationManager.Uninstall(System.String)">
            <summary>
            执行脚本删除与该特性相关的任何信息
            </summary>
            <param name="feature">要卸载的特性。</param>
        </member>
        <member name="T:Wd3eCore.Data.IDbConnectionAccessor">
            <summary>
            表示访问<see cref="T:System.Data.Common.DbConnection"/>的契约。
            </summary>
        </member>
        <member name="M:Wd3eCore.Data.IDbConnectionAccessor.CreateConnection">
            <summary>
            创建数据库连接。
            </summary>
        </member>
        <member name="T:Wd3eCore.Data.IScopedIndexProvider">
            <summary>
            代表一个契约
            该契约表示需要由DI解析并在<see cref="T:YesSql.ISession"/>层注册的<see cref="T:YesSql.ISession"/>的<see cref="T:YesSql.Indexes.IIndexProvider"/>。
            </summary>
        </member>
        <member name="T:Wd3eCore.Data.ISessionHelper">
            <summary>
            代表一个为<see cref="T:YesSql.ISession"/>提供帮助方法的契约。
            </summary>
        </member>
        <member name="M:Wd3eCore.Data.ISessionHelper.LoadForUpdateAsync``1(System.Func{``0})">
            <summary>
            载入单个文档（或创建一个新的文档）进行更新，并且不应该被缓存。
            对于完全隔离，它需要与<see cref="M:Wd3eCore.Data.ISessionHelper.GetForCachingAsync``1(System.Func{``0})"/>配对使用。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="factory">一个工厂的方法来加载或创建一个文档。</param>
        </member>
        <member name="M:Wd3eCore.Data.ISessionHelper.GetForCachingAsync``1(System.Func{``0})">
            <summary>
            获取单个文档（或创建一个新的文档）进行缓存，该文档不应该被更新。
            要完全隔离，需要与<see cref="M:Wd3eCore.Data.ISessionHelper.LoadForUpdateAsync``1(System.Func{``0})"/>配对使用。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="factory">一种获取或创建文档的工厂方法，用于缓存文档。</param>
            <returns></returns>
        </member>
        <member name="T:Wd3eCore.Data.ServiceCollectionExtensions">
            <summary>
            为<see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>提供了扩展方法，以添加YesSQL <see cref="T:Wd3eCore.Data.DatabaseProvider"/>s。
            </summary>
        </member>
        <member name="M:Wd3eCore.Data.ServiceCollectionExtensions.TryAddDataProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.String)">
             <summary>
            
             </summary>
             <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
             <param name="name">数据库提供者的名称。</param>
             <param name="value">数据库提供者值，即SQL Server、MySQL。</param>
             <param name="hasConnectionString">数据库中是否包含连接字符串。</param>
             <param name="hasTablePrefix">表的前缀。</param>
             <param name="isDefault">数据提供者是否为默认的数据提供者</param>
             <param name="sampleConnectionString">连接字符串示例，例如：Server={Server Name};Database={Database Name};IntegratedSecurity=true</param>
             <returns></returns>
        </member>
    </members>
</doc>
