<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>$(AspNetCoreTargetFramework)</TargetFramework>
    <IncludeBuildOutput>false</IncludeBuildOutput>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DocumentationFile>E:\工作项目\项目库\010_西门子医疗\代码库\Wd3eCore\src\Wd3eCore\Wd3eCore.Application.Targets\Wd3eCore.Application.Targets.xml</DocumentationFile>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DocumentationFile>E:\工作项目\项目库\010_西门子医疗\代码库\Wd3eCore\src\Wd3eCore\Wd3eCore.Application.Targets\Wd3eCore.Application.Targets.xml</DocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <FrameworkReference Include="Microsoft.AspNetCore.App" />
  </ItemGroup>

  <!--
    You can inject nuget targets and props via nuget. 
    Say you have a package named “MyPackage”. NuGet will add an MSBuild import to 
    build/$targetFramework/$packageId.props and build/$targetFramework/$packageId.targets. 
    You can optionally leave out the $targetFramework subdirectory. 
    Caution: this will make NuGet treat your packages as compatible with “any” target framework.
  -->

  <ItemGroup>
    <None Include="Wd3eCore.Application.Targets.targets" Pack="true">
      <PackagePath>build\$(TargetFramework)\Wd3eCore.Application.Targets.targets</PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Wd3eCore" Version="1.0.0-rc1" />
  </ItemGroup>

</Project>